package com.monsterspawned.infinibox.misc;

import net.minecraft.block.Block;
import net.minecraft.client.Minecraft;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.server.gui.IUpdatePlayerListBox;
import net.minecraft.tileentity.TileEntity;
import net.minecraft.world.World;

public class DevStuff {
	
	private EntityPlayer player = Minecraft.getMinecraft().thePlayer;
	
	public void AddDevSpecialties()
	{
		if(player.getDisplayName() == "TheModdersDen")
		{
			
		} else if(player.getDisplayName() == "colesboys") {
			
		} else if(player.getDisplayName() == "thecreator12345") {
			
		} else if(player.getDisplayName() == "") {
			
		} else if(player.getDisplayName() == "") {
			
		}
	}
	
	public class TileEntityMovingLightSource extends TileEntity implements IUpdatePlayerListBox
	{
	    public EntityPlayer thePlayer;
	    
	    public TileEntityMovingLightSource()
	    {
	        // after constructing the tile entity instance, remember to call 
	        // the setPlayer() method.

	    }
	    
	    /**
	     * This controls whether the tile entity gets replaced whenever the block state 
	     * is changed. Normally only want this when block actually is replaced.
	     */
	    @Override
	    public boolean shouldRefresh(Block oldBlock, Block newBlock, int oldMeta, int newMeta, World world, int x, int y, int z)
	    {
	        return (oldBlock != newBlock);
	    }

	    @Override
	    public void update()
	    {
	        // check if player has moved away from the tile entity
	        EntityPlayer thePlayer = worldObj.getClosestPlayer(
	              getPos().getX()+0.5D, 
	              getPos().getY()+0.5D, 
	              getPos().getZ()+0.5D, 
	              2.0D);
	        if (thePlayer == null)
	        {
	            if (worldObj.getBlockState(getPos()).getBlock() == 
	                  MovingLightSource.blockMovingLightSource)
	            {
	                worldObj.setBlockToAir(getPos());
	            }
	        }
	        else if (thePlayer.getCurrentEquippedItem().getItem() != null 
	              && !BlockMovingLightSource.isLightEmittingItem(
	                    thePlayer.getCurrentEquippedItem().getItem()))
	        {
	            if (worldObj.getBlockState(getPos()).getBlock() == 
	                  MovingLightSource.blockMovingLightSource)
	            {
	                worldObj.setBlockToAir(getPos());
	            }            
	        }
	    }  
	    
	    public void setPlayer(EntityPlayer parPlayer)
	    {
	        thePlayer = parPlayer;
	    }
	}

}
